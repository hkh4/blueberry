Grade Sheet for CS334S20 Final Project

Name: Hugo Hua

[10/10] 1000-word tutorial or 5-10 minute video presentation
  Nice video.
[ 1/1 ] Project has a name
[ 8/8 ] Project has a specification (and it builds)
[ 2/2 ] Parser is in a file called `ProjectParser.fs`
[ 2/2 ] Interpreter is in a file called `ProjectInterpreter.fs`
[ 2/2 ] `main` function is in a file called `Program.fs`
[10/10] Project compiles.
[10/10] Project runs.
[10/10] Language "does something."
[ 5/5 ] Docs explain what expected result will be.
[ 0/2 ] Implementation has test suite and it runs.
[2.5/5] There are >0 tests for the parser.
  You have a test, but it fails.
[ 5/5 ] There are >0 tests for the interpreter.
  No interpreter tests.
[ 5/5 ] Project can be run with dotnet.
[ 1/1 ] Specification has a title.
[ 1/1 ] Author name(s) is written at the top of the spec.
[ 2/2 ] Spec has Introduction section w/2+ paragraphs.
[ 2/2 ] Spec has Design Principles section w/1+ paragraphs.
[ 3/3 ] Spec has Examples section w/3+ examples.
[ 3/3 ] Instructions to run examples are provided.
  It would be good to provide the blb command that you demonstrated.
  I was able to generate .ps output, but I was not able to get
  GhostScript/Preview to actually render any of the .ps files.  I
  provided a sample error below.  It's unclear to me whether this is
  a mistake on my part, or if there is some extra configuration that
  is needed.
[ 2/2 ] Spec has Language Concepts section w/1+ paragraphs.
[ 2/2 ] Spec has complete Formal Syntax section in BNF.
[ 2/2 ] Spec has Semantics section w/1 description per language element.
  I think you actually have more operations than what you show here.
  For example, I don't see chords in here, although I watched you draw
  them in your demo.
[ 1/1 ] Spec provides enough detail that 3rd party can write new program.
[ 1/1 ] Program shuts down without .NET exception on malformed programs.
[ 1/1 ] Final spec is committed to `final-submission` branch.
[ 1/1 ] Final language is committed to `final-submission` branch.
[ 1/1 ] Spec has Remaining Work section.

TOTAL: 95.5%

I really like this project, and I think you should continue hacking on it.  It's already impressive, but I think that this could be a really impressive demo to show job recruiters, as it blends two domains, music and CS, really well.  Also-- it's useful!  I would definitely use this, and I agree that having a text-based tool would be way more useful than GUI-based tools.  It would be really easy to share files with other people and even modify them.  You could even imagine one day providing MIDI output so that this also useful as a compositional tools.
